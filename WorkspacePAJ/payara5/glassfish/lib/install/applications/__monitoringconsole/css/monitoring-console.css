/* 
   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  
   Copyright (c) 2019-2020 Payara Foundation and/or its affiliates. All rights reserved.
  
   The contents of this file are subject to the terms of either the GNU
   General Public License Version 2 only ("GPL") or the Common Development
   and Distribution License("CDDL") (collectively, the "License").  You
   may not use this file except in compliance with the License.  You can
   obtain a copy of the License at
   https://github.com/payara/Payara/blob/master/LICENSE.txt
   See the License for the specific
   language governing permissions and limitations under the License.
  
   When distributing the software, include this License Header Notice in each
   file and include the License file at glassfish/legal/LICENSE.txt.
  
   GPL Classpath Exception:
   The Payara Foundation designates this particular file as subject to the "Classpath"
   exception as provided by the Payara Foundation in the GPL Version 2 section of the License
   file that accompanied this code.
  
   Modifications:
   If applicable, add the following below the License Header, with the fields
   enclosed by brackets [] replaced by your own identifying information:
   "Portions Copyright [year] [name of copyright owner]"
  
   Contributor(s):
   If you wish your version of this file to be governed by only the CDDL or
   only the GPL Version 2, indicate your decision by adding "[Contributor]
   elects to include this software in this distribution under the [CDDL or GPL
   Version 2] license."  If you don't indicate a single choice of license, a
   recipient has the option to distribute your version of this file under
   either the CDDL, the GPL Version 2 or to extend the choice of license to
   its licensees as provided above.  However, if you add GPL Version 2 code
   and therefore, elected the GPL Version 2 license, then the option applies
   only if the new code is made subject to such option by the copyright
   holder.
*/
:root {
  /* -----------------[Copied from colours and spacing CSS]----------------- */

    --tango: 240,152,27;
    --midnight: 0,44,62;
    --smurf: 0,150,214;
    --basalt: 50,68,74;
    --concrete: 218,224,226;
    --cherry: 155,18,0;   /* Error */
    --slate: 78,90,94;    /* Neutral */
    --frog: 0,103,41;   /* Success */
    --coal: 23,24,24; /* Primarily used for dark mode background. */
    --onyx: 11,11,11; /* Header and button text. */

    --button-radius: 3px;
    --block-radius: 6px;

    --gutter-tight: 0.8rem;
    --gutter-medium: 1.6rem;
    --gutter-loose: 3.2rem;
    --gutter: var(--gutter-tight);

    --padding-tight: 1.2rem;
    --padding-medium: 1.6rem;
    --padding-loose: 2rem;
    --padding: var(--padding-tight);

  /* -------------[End of: Copied from colours and spacing CSS]------------- */

  /* Colour RGB values to be used in other variable definitions */
  --primary-color-rgb-orange:  240, 152,  27; /* #F0981B */

  /* Variables used in style definitons */
  --page-bg-color: rgb(var(--coal));
  --sidebar-bg-color: rgb(var(--midnight));
  --element-bg-color: rgba(var(--smurf), 0.15);
  --widget-bg-color: var(--page-bg-color);
  --widget-part-bg-color: var(--page-bg-color);

}

/* -----------------[Copied from scrollbar CSS]----------------- */
:root {  
  /* Page Scrollbar */
  --scrollbar-track: rgba(var(--onyx), 0.5);
  --scrollbar-thumb: rgba(255,255,255, 0.17);
  --scrollbar-shadow: rgba(var(--onyx), 0.75);
  --scrollbar-sidebar-thumb: rgba(var(--smurf), 0.4);
  --scrollbar-sidebar-track: rgba(var(--onyx), 0.5);
}
/* -------------[End of: Copied from scrollbar CSS]------------- */ 


* {
  scrollbar-width: thin;
  scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-track);
}
::-webkit-scrollbar {
  width: 8px;
}
::-webkit-scrollbar-track {
  background: var(--scrollbar-track);
}
::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb) ;
  border-radius: 10px;
}
aside * {
  scrollbar-color: var(--scrollbar-sidebar-thumb) var(--scrollbar-track);
}
aside *::-webkit-scrollbar-track {
  background: var(--scrollbar-sidebar-track);
}
aside *::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-sidebar-thumb) ;
}

/* Fonts */

  /* Normal */
  @font-face {
    font-family: 'IBM Plex Sans';
    font-style: normal;
    font-weight: 400;
    /* Uses the visitor's locally installed copy if available. */
    src: local('IBM Plex Sans'), local('IBMPlexSans'),
      /* Super Modern Browsers */
      url('../fonts/ibm-plex-sans-v2-latin-regular.woff2') format('woff2'), 
      /* Modern Browsers */
      url('../fonts/ibm-plex-sans-v2-latin-regular.woff') format('woff');
    font-display: swap;
  }

  /* Normal Italic */
  @font-face {
    font-family: 'IBM Plex Sans';
    font-style: italic;
    font-weight: 400;
    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),
      url('../fonts/ibm-plex-sans-v2-latin-italic.woff2') format('woff2'),
      url('../fonts/ibm-plex-sans-v2-latin-italic.woff') format('woff');
    font-display: swap;
  }
  
  /* Bold */
  @font-face {
    font-family: 'IBM Plex Sans';
    font-style: normal;
    font-weight: 700;
    src: local('IBM Plex Sans Bold'), local('IBMPlexSans-Bold'),
      url('../fonts/ibm-plex-sans-v2-latin-700.woff2') format('woff2'),
      url('../fonts/ibm-plex-sans-v2-latin-700.woff') format('woff');
    font-display: swap;
  }

  /* Bold Italic */
  @font-face {
    font-family: 'IBM Plex Sans';
    font-style: italic;
    font-weight: 700;
    src: local('IBM Plex Sans Bold Italic'), local('IBMPlexSans-BoldItalic'),
      url('../fonts/ibm-plex-sans-v2-latin-700italic.woff2') format('woff2'),
      url('../fonts/ibm-plex-sans-v2-latin-700italic.woff') format('woff');
    font-display: swap;
  }

  /* Semi-bold */
  @font-face {
    font-family: 'IBM Plex Sans';
    font-style: normal;
    font-weight: 500;
    src: local('IBM Plex Sans Medium'), local('IBMPlexSans-Medium'),
      url('../fonts/ibm-plex-sans-v2-latin-500.woff2') format('woff2'),
      url('../fonts/ibm-plex-sans-v2-latin-500.woff') format('woff');
    font-display: swap;
  }

  /* Semi-bold Italic */
  @font-face {
    font-family: 'IBM Plex Sans';
    font-style: italic;
    font-weight: 500;
    src: local('IBM Plex Sans Medium Italic'), local('IBMPlexSans-MediumItalic'),
      url('../fonts/ibm-plex-sans-v2-latin-500italic.woff2') format('woff2'),
      url('../fonts/ibm-plex-sans-v2-latin-500italic.woff') format('woff');
    font-display: swap;
  }


body {
    background-color: var(--page-bg-color);
    font-family: 'IBM Plex Sans', Helvetica, Arial, sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: normal;
    line-height: 1.5em;
    color: white;
    margin: 0;
    padding: 0;
}
footer {
  padding: 12px;
  height: 24px;
  background-color: black;
  color: rgba(255,255,255, 0.75);
  text-align: center;
  position: fixed;
  bottom: 0;
  width: calc(100% - 24px);
}
h1 {
	font-size: 24px;
  font-weight: bold;
}
select {
	width: 100%;
  box-sizing: border-box;
  max-width: 162px;
  background: white;
  padding: 2px 5px;
  border-radius: 2px;
  margin-bottom: 2px;
  border: 1px solid #ccc;  
}
textarea {
  width: 100%;
  box-sizing: border-box;
}
input[type=color] {
  border: 0;
  padding: 0;
  width: 200%;
  height: 200%;
  cursor: pointer;
  transform: translate(-25%, -25%)
}
.color-picker {
  display: inline-block;
  vertical-align: middle;
  width: 24px;
  height: 24px;
  border-radius: 24px;
  overflow: hidden;
  border: 1px solid #444;
  margin: 1px 1px 0 0;  
}
input[type=button].color-reset {
  border-radius: 10px;
  border: 1px solid #444;
  width: 20px;
  height: 20px;
  display: inline-block;
  cursor: pointer;
}
button.color-list {
  border-radius: 12px;
  width: 24px;
  height: 24px;
  display: inline-block;
  cursor: pointer;
  background-color: white;
  font-weight: bold;
  margin: 1px;
  text-align: center;
  padding: 0;
  vertical-align: middle;  
}
button.big-plus {
  background: none;
  font-size: 48px;
  color: white;
  box-shadow: none;
  outline: none;
  flex: 1 1 auto;
  align-self: center;
  display: block;
  width: 100%;
  box-sizing: border-box;  
}
button.big-plus:hover {
  background-color: transparent;
  color: rgb(var(--primary-color-rgb-orange));
}
input[type="button"] {
  border-radius: 2px;
  border: 2px outset #ccc;
  margin: 1px;
  vertical-align: middle;
  display: inline-block;
}
input[type="text"], input[type="number"] {
	border: 1px solid #ccc;
  padding: 3px 5px;
  border-radius: 2px;
}
input[type="text"] {
  width: 150px;
  max-width: 150px;
}
input[type="text"]:invalid {
  background-color: #ffdddd;
}
input[type="number"] {
  width: 37px;
  margin-right: 3px;
}
input[type="checkbox"] {
  vertical-align: middle;
}
input[readonly] {
  background-color: transparent;
  color: white;
  border-width: 0;
}
canvas {
  position: relative;
}

button {
  background: rgba(255,255,255, 0.5);
  box-shadow: 0 1px 0 0 rgba(var(--onyx), 0.3);
  border: none;
  border-radius: var(--button-radius);
  color: rgb(var(--onyx));
  display: inline-flex;
  align-items: center;
  font-family: inherit;
  font-size: 100%;
  line-height: inherit;
  padding: 8px 20px; 
  text-align: center;
  text-decoration: none; 
  cursor: pointer;
}
button[class] {
  cursor: pointer;
  -webkit-appearance: none;
}
button:hover {
  box-shadow: none !important;
  opacity: 0.9;
  transform: translateY(1px);
}
button.primary {
  background: rgb(var(--tango));
  box-shadow: 0 1px 0 0 rgba(var(--onyx), 0.6);  
}
button.toggle {
  background: rgba(255,255,255, 0.2);
  border: none;
  border-radius: 20px;
  color: rgb(255,255,255);
  font-family: inherit;
  font-size: 12px;
  font-weight: 700;
  line-height: inherit;
  padding: 2px;
  position: relative;
  transform: none;
  margin-bottom: 2px;
}
button.toggle .toggle__off, 
button.toggle .toggle__on {
  border-radius: 2em;
  display: inline-block;
  padding: 2px 8px;
  text-transform: uppercase;
  line-height: 1.5em;
}
button.toggle[aria-checked=false] .toggle__off, 
button.toggle[aria-checked=true] .toggle__on {
  background: rgba(255,255,255, 0.5);
  color: rgb(var(--onyx));
}
button svg.icon {
  padding: 0;
  fill: rgba(var(--onyx), 0.75);
}
button:not([class*='btn-icon']) svg.icon {
  margin: 0 -8px;
}
button.btn-icon {
  display: inline-flex;
  width: 40px;
  height: 40px;
  padding: 12px;
  box-sizing: border-box;
  box-shadow: 0 1px 0 0 rgba(var(--coal), 0.6);
}
button.btn-toggle {
  float: right;
  margin: 0 2px 8px 2px;
}
button.btn-selected {
  background: rgb(var(--onyx));
  color: white;
}
button.btn-selected .icon {
  fill: rgba(255,255,255, 0.75);
}
button svg + span:not([class='visually-hidden']) {
  margin-left: 20px;
}
svg.icon {
  pointer-events: none;
  box-sizing: content-box;
  width: 16px;
  height: 16px;
  padding: 12px;
  fill: white;
}

.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(100%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}



#page-main {
  min-height: calc(100% - 48px);
  margin-bottom: 48px;
  overflow-y: auto;
  display: flex;
  flex: 1 0 auto;
}
#panel-grid {
  position: relative;
}
#panel-trace {
  box-sizing: border-box;
  width: 70vw;
  display: grid;
  grid-template-columns: 60% 40%;
  grid-gap: 8px;
}
#panel-trace button {
  margin-bottom: 8px;
}  
#trace-widget {
  background-color: var(--widget-bg-color);
  position: relative;
}
#trace-legend {
  position: absolute;
  width: 100%;
  bottom: 0;
}
#trace-chart-box {
  position: relative;
  clear: both;
  padding-bottom: 60px;
}
#grid-console {
  position: relative;
  border-spacing: 0;
  border-collapse: collapse;
}
.console-area {
	padding: 5px 10px;
	vertical-align: top;
}
#chart-container {
  padding: 0 5px;
}
.Chart {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; 
  height: 100%;
}

#chart-grid {
	width: 100%;
	table-layout:fixed;
	border-spacing: 5px;
  border-collapse: separate;
  padding-top: 5px;
}
#chart-grid > tr > td {
    background-color: var(--widget-bg-color);
    padding: 8px;
    vertical-align: top;
    position: relative;
}
#chart-grid .Widget.empty {
  display: flex;
}

.Widget {
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
}
.WidgetContent {
  position: relative;
  flex: 1 1 auto;
  margin: 2px 0;
  min-height: 100px;
}
.WidgetContent.WidgetContentTop {
  display: none;
}

/**
 * Widget Settings (Sizes and Visibility)
 */
#Settings {
  position: relative;
  color: white;
  box-sizing: border-box;
  background-color: var(--sidebar-bg-color);
}
#Settings.SettingsExpanded {
  flex: 0 0 460px;
  padding: 12px;
}
#Settings.SettingsCollapsed {
  flex: 0 0 40px;
  padding: 8px;
}
#Settings.SettingsCollapsed .btn-toggle {
  transform: rotate(180deg);
}

.SettingsGroups {
  width: 100%;
  clear: both;
}
.Settings button.btn-toggle {
  float: left;
}
.Settings button.btn-add {
  margin: 0 2px 8px 2px;
  float: right;
}
.SettingsTabs, 
.SettingsList {
  position: relative;
  margin: 8px 0;
  background: rgba(var(--smurf), 0.15);
  border-radius: var(--block-radius);
}
.SettingsTabs.SettingsApp {
}
.Settings .SettingsTabs > div > button {
  background: rgba(var(--smurf), 0.35);
  border-radius: var(--button-radius) var(--button-radius) 0 0;
  display: inline-block;
  border: none;
  color: white;
  padding: 8px 12px;
  margin-left: 8px;
  box-shadow: none;
}
.Settings .SettingsTabs > div > button:focus {
  outline: none;
}
.Settings .SettingsTabs > div > button:hover {
  background: rgba(var(--smurf), 0.3);
  opacity: 1;
  transform: none;
}
.Settings .SettingsTabs > div > button + button {
  margin-left: 4px;
}
.Settings .SettingsTabs > div > button.state-active {
  background: rgba(var(--smurf), 0.2);
}
.SettingsGroup {
  padding: 12px;
}
.SettingsTabs .SettingsGroup {
  background: rgba(var(--smurf), 0.2);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.Settings table {
  width: 100%;
  border-spacing: 0 3px;
}
.Settings tr {
}
.Settings h4 {
  cursor: pointer;
  margin: 0;
  display: flex;
  align-items: center;
}
.Settings h4 span + svg.icon {
  fill: rgba(255,255,255, 0.3);
  position: absolute;
  right: 0;
}
.Settings h4 > .icon-menu-arrow {
  transform: rotate(-90deg);
}
.Settings h4.state-collapsed .icon-menu-arrow {
 transform: rotate(90deg); 
}
.Settings table td {
  max-width: 230px;
}
.Settings table td:first-child {
  width: 150px;
  vertical-align: top;
  padding-left: 4px;
  color: white;
}
.Settings a, .Settings a:visited {
  color: white;
}
.Settings label {
  padding-right: 0.5em;
  white-space: nowrap;
}
.Settings .toggle + label {
  margin-left: 1em;
}
.Settings .x-input span {
  white-space: nowrap;
}
.Settings table div input[type=text] {
  width: 37px;
  margin-right: 3px;
}
.Settings table button:not([class]) {
    padding: 4px 16px;
    margin-right: 8px;
    margin-bottom: 8px;
}
.Settings table button:not(.toggle) {
  padding: 2px 8px;
}
.Settings table input[type=text],
.Settings table input[type=number] {
  padding: 2px 8px;
  border-radius: 3px;
  border: none;
  font-size: inherit;
  line-height: inherit;
}
.Settings table select {
  padding: 4px 8px;
  font-size: inherit;
}
.Settings table .btn-icon {
  height: 28px;
  width: 28px;
}
.Settings table td:first-child {
  padding-right: 4px;
}
.Settings table td .x-input div {
  margin-top: 2px;
}




/* HTML Chart Tooltips */
#chartjs-tooltip {
  position: absolute;
  background-color: var(--sidebar-bg-color);
  padding: 12px;
  width: 400px;
  border-radius: var(--block-radius);
  opacity: 0;
}
table.tags {
  width: 100%;
}
table.tags th {
  text-align: left;
  width: 25%;
}
table.tags th, table.tags td {
  background-color: var(--widget-bg-color);
}

/* Widget Legend */
.Legend {
  position: relative;
  align-self: flex-end;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25%, 1fr));
  margin: 0;
  padding: 0;
  width: 100%;
  background-color: var(--widget-part-bg-color);  
}
.WidgetContentTop + .Legend {
  grid-template-columns: 1fr;
}
.Legend li {
  position: relative;
  display: flex;
  flex-direction: row;
  list-style:none;
  margin-right: 8px;
  margin-bottom: 2px;
}
.Legend .LegendColorIndicator {
  min-height: 100%;
  width: 5px;
  min-width: 5px;
  margin-right: 1px;
}
.Legend .LegendLabel {
  display: flex;
  flex-direction: column;
  text-overflow: ellipsis;
  overflow: hidden;
  margin-left: 5px;
}
.Legend .LegendLabel div {
  display: grid;
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
  grid-column-gap: 8px;
}
.Legend .LegendLabel strong {
  font-size: 28px;
  font-weight: bold;
  grid-row: 2;
  overflow: hidden;
  text-overflow: ellipsis;
}
.Legend .LegendLabel > * {
  font-weight: 600;
  color: rgba(255,255,255,0.8);
  text-overflow: ellipsis;
  overflow: hidden;
}
.Legend .LegendLabel > span {
  flex: 1 0 auto;
}
.Legend .LegendLabel strong small {
  font-size: 16px;
}
.Legend .status-missing {
  color: #0096D6;
}
.Legend .status-alarming {
  animation: blinker 2s linear infinite;
}
.Legend .status-critical {
  animation: blinker 1s linear infinite;
}
.Legend .status-red {
  animation: blinker 1s linear infinite;
}
.Legend .status-amber {
  animation: blinker 2s linear infinite;
}
.Legend .status-error {
    color: red;
}
@keyframes blinker {
  50% {
    opacity: 0.5;
  }
}

/* Widget Indicator */
.Indicator {
  padding: 5px 10px;
  text-align: center;
  position: absolute;
  max-width: 50%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--widget-bg-color);
  font-weight: bold;
  opacity: 0.9;
  border-radius: var(--block-radius);
}
.Indicator.status-missing {
  width: 100%;
  max-width: 100%;
  height: 100%;
  box-sizing: border-box;
  background-color: var(--page-bg-color);
  text-align: left;
  padding: 20px;
  opacity: 1;
  font-weight: normal;
}
.Indicator.status-missing p {
  font-size: 50px;
  text-align: center;
  color: #e6194B;
}
.Indicator b {
  color: white;
}
.Indicator i {
  font-style: normal;
  color: #ddd;
}


/* RAG Indicator */
.RAGIndicator {
  width: 100%;
}
.RAGIndicator .Item {
  position: relative;
  border-left: 5px solid transparent;
  padding: 0 5px;
  margin-left: 50px;
  min-height: 40px;
  box-sizing: border-box;
  margin-bottom: 2px;
}
.RAGIndicator .Item div {
  display: grid;
  grid-template-columns: 6em auto;
  grid-gap: 0 5px;
}
.RAGIndicator .Item div strong {
  font-size: 200%;
  grid-column: 1;
  grid-row: 1;
}
.RAGIndicator .Item div strong + span {
  grid-column: 2;
  grid-row: 1;
  font-size: 130%;
}
.RAGIndicator .Item div span + span {
  display: block;
  grid-column: 1 / 3;
  grid-row: 2;
}
.RAGIndicator .RAGIndicatorLight {
  width: 40px;
  height: 40px;
  display: inline-block;
  border-radius: 50%;
  position: absolute;
  left: 0;
  top: 0;
  margin-left: -50px;
}
.RAGIndicator .RAGIndicatorLight.RAGIndicatorRecent {
  animation: blinker 2s linear infinite;
}

/* Alert Tables */
.AlertTable {
  position: relative;
  background-color: var(--widget-part-bg-color);
}
.Widget .AlertTable {
  position: absolute;
  top: 0;
  width: 100%;
  max-width: 100%;
  max-height: 100%;
  overflow-y: auto;
  overflow-x: hidden;  
}
.AlertTable .Item {
  border-left: 5px solid transparent; /* colored via inline style */
}
.AlertTable .Item > div {
  padding: 5px 10px;
  margin: 0 0 2px 2px;
  border: 1px solid transparent; /* colored via inline style */
  border-left: 30px solid transparent; /* colored via inline style */
}
.AlertTable .Item > div > input[type=checkbox] {
  position: absolute;
  left: 10px;
}
.AlertTable .Item h4 {
  margin: 0;
  padding: 0;
}
.AlertTable .Item strong {
  display: inline-block;
  margin: 0 0.9em 0 0.4em;
  padding: 1px;
  background-color: var(--widget-part-bg-color);
}
.AlertTable .Item small {
  color: rgba(255,255,255,0.8);
  background-color: var(--widget-part-bg-color);
  font-weight: normal;
  font-size: 14px;
}
.AlertTable .Item span {
  white-space: nowrap;
}
.AlertTable .Item pre {
  white-space: pre-wrap;
  color: #DAE0E2;
  background-color: #434445;
  margin: 0.25em 0;
}
.AlertTable .Item a {
  cursor: pointer;
}
.AlertTable .Item .Group {
  display: inline-block;
}
.AlertTable .Item .Group.Annotation {
  display: block;
  border: 0 solid transparent;
  border-width: 0 0 0 5px;
  padding: 0 5px;
  margin: 5px 0 0 0;
}
.Widget .AlertTable .AlertTableUnconfirmed {
  animation: blinker 1s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite;
}


/* Alert Tables */
.AnnotationTable {
  position: absolute;
  top: 0;
  width: 100%;
  max-height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  background-color: var(--widget-part-bg-color);
}
.AnnotationTable .Group.Annotation {
  display: block;
  border: 0 solid transparent;
  border-width: 0 0 0 5px;
  padding: 0 5px;
  margin: 5px 0 0 0;
}
.AnnotationTable .Annotation strong {
  display: inline-block;
  margin: 0 0.9em 0 0.4em;
  padding: 1px;
  background-color: var(--widget-part-bg-color);
}
.AnnotationTable .Annotation small {
  color: #bbb;
  background-color: var(--widget-part-bg-color);
}
.AnnotationTable .Annotation span {
  white-space: nowrap;
}
.AnnotationTable .Annotation pre {
  white-space: pre-wrap;
  color: #DAE0E2;
  background-color: rgba(67,68,69, 0.75);
  margin: 0;
  padding: 0.2em 0.5em;
  text-align: left;
  font-size: 13px;
}
.AnnotationTable .Annotation code {
  text-align: left;
  font-size: 13px;
}
table.AnnotationTable {
  border-collapse: separate;
  border-spacing: 0 3px;
}
.AnnotationTable th {
  border-bottom: 1px solid #0096D6;
}
.AnnotationTable td {
  border-left: 1px solid #0096D6;
  padding: 0 0.5em;
  text-align: right;
  font-size: 15px;
  line-height: 1em;
}
.AnnotationTable td:first-child {
  border-left: 5px solid transparent;
  text-align: left;
}
.AnnotationTable tr:hover {
  background-color: #0096D6;
}


/* Watch Manager/Settings Component */
.WatchManager {

}

/* Watch List Component */
.WatchList {
  background-color: rgba(255,255,255,0.1);
  border-radius: var(--block-radius);
  padding: 12px;
}
.WatchList dt {
  margin: 8px 0;
  display: flex;
  align-items: center;
}
.WatchList dt b {
  cursor: pointer;
  flex: 0 0 25%;
}
.WatchList dt button {
  margin-right: 8px;
}
.WatchList dt code {
  flex: 1 1 auto;
}
.WatchList .state-disabled b {
  text-decoration: line-through;
}
.WatchList .btn-icon {
  background: none;
  outline: none;
  box-shadow: none !important;
  transform: none !important;
}
.WatchList .btn-icon .icon {
  transform: rotate(-90deg);
  fill: rgba(255,255,255,0.9);
}
.WatchList .state-collapsed .btn-icon .icon {
  transform: rotate(90deg);
}
.WatchList .btn-icon:hover .icon {
  fill: rgba(255,255,255,1);
}
.WatchManager .WatchCondition em {
  font-weight: normal;
}
.WatchCondition {
  padding: 0 0.5em;
  font-family: monospace;
  font-size: 14px;
}
.WatchCondition em {
  font-style: normal;
}
.WatchCondition select, 
.WatchCondition input {
  width: auto;
  max-width: none;
  font-family: monospace;
}
.WatchCondition input {
}
.WatchCondition input.input-value, 
.WatchCondition span span span input.input-text {
  width: 50px;
}
.WatchCondition input.input-text {
  width: 200px;
  max-width: 200px;
}
.WatchBuilder {
}
.WatchBuilder .WatchCondition {
  margin: 5px 0;
  padding: 3px 1em;
}
.WatchBuilder .WatchBuilderForm > div {
  padding: 3px 0;
}
.WatchBuilder .WatchBuilderForm label {
  min-width: 75px;
  display: inline-block;
}
.WatchBuilder .WatchBuilderForm input[type=text], 
.WatchBuilder .WatchBuilderForm select {
  width: 300px;
  max-width: 300px;
  margin: 0 1em;
}
.WatchBuilder .WatchBuilderForm > div > span {
  display: inline-block;
  margin: 0 1em;  
}






/* SelectionWizard Component */
.SelectionWizard {
  min-width: calc(80vw - 24px);
  display: grid;
  grid-template-columns: 50% 50%;
  grid-gap: 8px;
  box-sizing: border-box;
}
.SelectionWizard .SelectionWizardFilter label {
  width: 240px;
  display: inline-block;
}
.SelectionWizard .SelectionWizardFilter select,
.SelectionWizard .SelectionWizardFilter input[type=text] {
  max-width: 240px;
}
.SelectionWizard .SelectionWizardSearch {
  padding: 8px 0;
  grid-column: 1 / 3;
}
.SelectionWizard .SelectionWizardMatches {
  padding: 8px;
  background-color: rgba(255,255,255,0.1);
  border-radius: var(--block-radius);
}
.SelectionWizard .SelectionWizardSelection {
  padding: 8px;
  background-color: rgba(255,255,255,0.1);
  border-radius: var(--block-radius);
}
.SelectionWizard .SelectionWizardSelection p {
  font-style: italic;
  padding: 0;
  margin: 2px 2em 0.5em 0;  
}
.SelectionWizard h4,
.SelectionWizard ol {
  margin: 0;
}
.SelectionWizard ol li {
  display: flex;
  align-items: flex-start;
}
.SelectionWizard ol li input[type=checkbox] {
  margin: 8px;
}

/* Page Manager Component */
.PageManager table {
  border-spacing: 10px 0;
  border-collapse: separate;
  width: calc(100% + 20px);
  margin-left: -10px;
  clear: both;
  padding-top: 1em;
}
.PageManager table th {
  text-align: left;
}
.PageManager table td, .PageManager table th {
  padding: 2px 0.5em;
  background-color: rgba(255,255,255,0.1);
}
.PageManager span {
  padding-left: 20px;
  display: inline-block;
}
.PageManager > span {
  float: right;
}
.PageManager span.recent:before {
  content: '\00002a';
  font-size: 20px;
  font-weight: bold;
  position: relative;
  margin-left: -20px;
  margin-right: 8px;
}
.PageManager table tr {
  border-top: 1px solid rgba(var(--primary-color-rgb-orange));
}
.PageManager table tr:first-child {
  border-width: 0;
}
.PageManager table th + td, .PageManager table th + td + td, .PageManager table th + td + td + td {
  width: 20%;
}
.PageManager table tr:nth-child(even) td {
  background-color: rgba(255,255,255,0.2);
}
.PageManager table div {
  display: grid;
  grid-template-columns: 1fr 1fr;
}

/* NavSidebar Component */
.NavSidebar {
  position: relative;
  background-color: var(--sidebar-bg-color);
  color: white;
  display: flex;
  flex-direction: column;
  align-self: stretch;
  min-height: calc(100vh - 48px);
  box-sizing: border-box;
}
.NavSidebar.NavCollapsed {
  flex: 0 0 40px;
  padding: 8px;
}
.NavSidebar.NavExpanded {
  flex: 0 0 300px;
  padding: 12px;
  box-sizing: border-box;
}
.NavSidebar.NavExpanded .btn-toggle {
  transform: rotate(180deg);
}
.NavSidebar.NavExpanded .NavLogo {
  cursor: pointer;
  display: inline-block;
}
.NavSidebar.NavExpanded .NavLogo img {
  max-width: 120px; 
  width: 120px;
}
.NavSidebar.NavCollapsed .NavLogo img {
  max-width: 36px;
  width: 36px;
  margin: 4px;
}
.NavSidebar .NavPages {
  margin: 8px 0;
  flex: 0 1 auto;
  max-height: 40vh;
  overflow-y: auto;
}
.NavSidebar .NavPages ul {
  padding: 0;
  margin: 0;
  margin-right: 4px;
}
.NavSidebar .NavPages .NavItem {
  list-style-type: none;
  position: relative;
}
.NavSidebar .NavPages .NavItem .btn-icon {
  position: absolute;
  top: 0;
  right: 0;
  background: none;
  outline: none;
  box-shadow: none;
}
.NavSidebar .NavPages .NavItem .btn-icon .icon {
  fill: rgba(255,255,255, 0.75);
}
.NavSidebar .NavPages .NavItem .btn-icon:hover {
  transform: none;
}
.NavSidebar .NavPages .NavItem .btn-icon:hover .icon {
  fill: rgba(255,255,255, 1);
}
.NavSidebar .NavPages .NavItem.selected a {
  background: rgba(var(--smurf), 0.75);
  cursor: default;
}
.NavSidebar .NavPages .NavItem a,
.NavSidebar .NavPages .NavItem a:visited {
  background-color: var(--element-bg-color);
  color: white;
  text-decoration: none;
  padding: 8px calc(32px + 1.6rem) 8px 20px;
  display: block;
  border-top: solid 1px rgba(255,255,255, 0.1);
}
.NavSidebar .NavPages .NavItem a:hover {
  background: rgba(var(--smurf), 0.25);
}
.NavSidebar .NavPages .NavItem:first-child a {
  border-top-width: 0;
  border-radius: var(--button-radius) var(--button-radius) 0 0;
}
.NavSidebar .NavPages .NavItem:last-child a {
  border-radius: 0 0 var(--button-radius) var(--button-radius);
}
.NavSidebar .NavPages .NavItem a:focus {
  border-radius: var(--button-radius);
  box-shadow: 0 0 0 4px rgb(var(--smurf));
}
.NavSidebar .NavControls,
.NavSidebar .NavAdd {
  flex: 0 0 auto;
}
.NavSidebar .NavControls {
  padding: 0;
  padding-top: 12px;
  margin: 0;
}
.NavSidebar .NavControls dt {
  padding: 0;
  padding-bottom: 8px;
  clear: both;
  font-weight: bold;
  text-align: left;
}
.NavSidebar .NavControls dd {
  text-align: right;
  margin: 0 2px 8px 2px;
}
.NavSidebar.NavExpanded .NavControls dd {
  float: left;
}
.NavSidebar.NavExpanded .NavControls dd > span {
  margin-top: 8px;
  display: inline-flex;
  align-items: center;
}
.NavSidebar .NavControls input[type="range"] {
  width: 120px;
  display: inline-block;
  margin: 0 1em;
}
.NavTitle {
  flex: 1 0 auto;
  height: 0;
  max-height: 40vh;
  position: relative;
}
.NavTitle h1 {
  left: 50%;
  top: 50%;
  position: absolute;
  transform: translate(-50%) rotate(270deg);
  white-space: nowrap;
  cursor: pointer;
}


/**
 * WidgetHeader component
 **/
.WidgetHeader {
  align-self: flex-start;
  width: 100%;
}
.WidgetHeader.WidgetHeaderSelected h3 {
  color: white;
}
.WidgetHeader h3 {
  font-size: 24px;
  font-weight: bold;
  margin: 0;
  cursor: pointer;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  padding: 2px 5px;
  text-align: center;
  color: #F0981B;
  position: relative;
}
.WidgetHeader h3 .icon {
  padding: 4px;
  position: absolute;
  top: 0;
  right: 0;
  fill: rgba(255,255,255,0.75);
  transform: scale(-1, 1);
}
.WidgetHeader h3:hover .icon {
  fill: rgba(255,255,255,1);
}



/**
 * FeedbackBanner
 */
#FeedbackBannerContainer {
  position: absolute;
  z-index: 120;
  width: 40%;
  margin: 0 30%;
}
.FeedbackBanner {
  padding: 12px;
  position: relative;
  color: white;
  border-radius: var(--block-radius);
  margin: 8px;
  background: rgba(var(--basalt), 1);
}
.FeedbackBanner.FeedbackBannerSuccess {
  background: rgba(var(--frog), 1);
}
.FeedbackBanner.FeedbackBannerError {
  background: rgba(var(--cherry), 1);
}
.FeedbackBanner p {
  margin: 0;
  margin-left: 48px;
}
.FeedbackBanner p em {
  font-style: normal;
  font-weight: bold;
}
.FeedbackBanner > .icon {
  position: absolute;
  width: 24px;
  height: 24px;
  left: 16px;
  top: 12px;
  padding: 0;
}
.FeedbackBanner .btn-close {
  position: absolute;
  right: 0;
  top: 0;
  background: none;
  box-shadow: none;
}
.FeedbackBanner .btn-close .icon {
  fill: rgba(255,255,255, 0.75);
}  
.FeedbackBanner .btn-close:hover .icon {
  fill: rgba(255,255,255, 1);
}

/* Modal Components */
.ModalDialog {
  align-items: center;
  background: rgba(var(--coal), 0.9);
  bottom: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  left: 0;
  padding: 24px;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 110;
}
.ModalDialog .ModalDialogContent {
  background: rgba(var(--basalt, 0.8));
  box-shadow: 0px 20px 20px 4px rgba(var(--onyx),0.9);
  border-radius: var(--block-radius);
  display: inline-flex;
  flex-direction: column;
  margin: 8px 0;
  min-width: 20vw;
  max-width: 80vw;
  padding: 12px;
  position: relative;
  box-sizing: border-box;
}
.ModalDialog .ModalDialogContent.danger-zone {
  background: rgba(var(--cherry, 0.8));
}
.ModalDialog .ModalDialogScroll {
  flex: 1 0 auto;
  max-height: 80vh;
  overflow-y: auto;
  overflow-x: hidden;
}
.ModalDialog .btn-close {
  position: absolute;
  right: 0;
  top: 0;
  background: none;
  box-shadow: none;
  transform: none !important;
}
.ModalDialog .btn-close .icon {
  fill: rgba(255,255,255,0.75);
}
.ModalDialog .btn-close:hover .icon {
  fill: rgba(255,255,255,1);
}
.ModalDialog .ModalDialogContent > h2 {
  margin: 0 28px 16px 0;
  font-size: 24px;
}
.ModalDialog .ModalDialogContent.ModalDialogIcon > h2 {
  display: grid;
  grid-template-columns: 48px auto;
  align-items: center;
  margin-bottom: 0;
}
.ModalDialog .ModalDialogIcon > .ModalDialogScroll {
  width: calc(100% - 48px);
  margin-left: 48px;
}
.ModalDialog .ModalDialogIcon h2 svg {
  width: 24px;
  height: 24px;
  fill: rgba(255,255,255,1);
}
.ModalDialog .ModalDialogContent h3 {
  font-size: 16px;
}
.ModalDialog .ModalDialogButtons {
  padding: 10px 0;
  text-align: center;
  clear: both;
}
.ModalDialog .ModalDialogButtons button {
  margin: 0 10px;
}
.ModalDialog em {
  font-style: normal;
  color: white;
  font-weight: bold;
}
.ModalDialog ul {
  list-style-type: none;
  padding: 0;
}
.ModalDialog input[type=checkbox] + label {
  cursor: pointer;
}

/* Modal Dialog Customisation */
.ModalDialog .ModalDialogUserRole dl {
  display: grid;
  grid-template-rows: auto auto;
  grid-template-columns: 1fr 1fr 1fr;
  grid-auto-flow: column;
  grid-gap: 5px 40px;
}
.ModalDialog .ModalDialogUserRole dd {
  margin: 0;
}
.ModalDialog .ModalDialogUserRole .ModalDialogButtons {
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 1fr 1fr 1fr;
  grid-auto-flow: column;
  grid-gap: 0 40px;
}
.ModalDialog .ModalDialogUserRole .ModalDialogButtons button {
  justify-self: center;
}

/* Alert Modal Dialog Customisation */
#AlertDialog {
  background: transparent;
  pointer-events: none;
}

#AlertDialog .ModalDialogContent {
  pointer-events: auto;
}

/* AlertIndicator Component */
#AlertIndicator {
  float: right;
}
.AlertIndicator a {
  padding-left: 12px;
  font-weight: bold;
  text-decoration: none;
}
.AlertIndicator a b {
  font-size: 24px;
}
.AlertIndicator a.AlertIndicatorActive {
  animation: blinker 1s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite;
}

